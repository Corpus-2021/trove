apply plugin: 'java'
apply plugin: 'idea'

repositories {
    jcenter()
}

dependencies {
    testCompile 'junit:junit:4.12'
}

def outputDir = 'output'
def outputGeneratorClasses = "${outputDir}/generator_classes"
def outputGenerated = "${outputDir}/gen_src"
def outputDest = "${outputDir}/classes"
def outputTests = "${outputDir}/test_classes"
def outputLib = "${outputDir}/lib"
def distRoot = "${outputDir}/dist"

def templates = "templates"
def generatorSrc = "generator_src"

// add generated sources to classpath for compilation
sourceSets.main.java.srcDirs += outputGenerated

// logic for generating sources
task generate(type: JavaExec, dependsOn: ':buildGenerator') {
    classpath = files(outputGeneratorClasses)
    main = 'gnu.trove.generator.Generator'
    args templates, outputGenerated
}

task buildGenerator(type: JavaCompile) {
    classpath = files(generatorSrc)
    source = generatorSrc
    destinationDirectory = file(outputGeneratorClasses)
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

// add output directory to be cleaned
clean.doFirst {
    delete outputDir
}

// setup intellij to work with generated files
idea {
    module {
        generatedSourceDirs += file(outputGenerated)
    }
}

// setup task dependencies
tasks.idea.dependsOn generate
tasks.compileJava.dependsOn generate
